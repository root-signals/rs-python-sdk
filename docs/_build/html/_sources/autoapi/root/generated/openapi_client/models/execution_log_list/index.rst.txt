root.generated.openapi_client.models.execution_log_list
=======================================================

.. py:module:: root.generated.openapi_client.models.execution_log_list

.. autoapi-nested-parse::

   Root Signals API

   Root Signals JSON API provides a way to access Root Signals using provisioned API token

   The version of the OpenAPI document: 1.0.0 (latest)
   Generated by OpenAPI Generator (https://openapi-generator.tech)

   Do not edit the class manually.



Classes
-------

.. autoapisummary::

   root.generated.openapi_client.models.execution_log_list.ExecutionLogList


Module Contents
---------------

.. py:class:: ExecutionLogList

   Bases: :py:obj:`pydantic.BaseModel`


   ExecutionLogList


   .. py:attribute:: cost
      :type:  Optional[Union[pydantic.StrictFloat, pydantic.StrictInt]]


   .. py:attribute:: created_at
      :type:  Optional[datetime.datetime]


   .. py:attribute:: evaluation_context
      :type:  Optional[root.generated.openapi_client.models.execution_log_list_evaluation_context.ExecutionLogListEvaluationContext]


   .. py:attribute:: id
      :type:  pydantic.StrictStr


   .. py:attribute:: judge
      :type:  Optional[root.generated.openapi_client.models.execution_log_details_judge.ExecutionLogDetailsJudge]


   .. py:attribute:: llm_output
      :type:  Optional[pydantic.StrictStr]


   .. py:attribute:: model_config


   .. py:attribute:: owner
      :type:  root.generated.openapi_client.models.nested_user_details.NestedUserDetails


   .. py:attribute:: parent_execution_log_id
      :type:  Optional[pydantic.StrictStr]
      :value: None



   .. py:attribute:: score
      :type:  Optional[Union[pydantic.StrictFloat, pydantic.StrictInt]]


   .. py:attribute:: skill
      :type:  root.generated.openapi_client.models.execution_log_list_skill.ExecutionLogListSkill


   .. py:attribute:: tags
      :type:  List[pydantic.StrictStr]


   .. py:attribute:: validation_result_average
      :type:  Optional[Union[pydantic.StrictFloat, pydantic.StrictInt]]


   .. py:attribute:: variables
      :type:  Optional[Dict[str, pydantic.StrictStr]]


